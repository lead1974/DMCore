@page
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@model DMCore.Areas.Admin.Pages.DealCategories.IndexModel
@{
    ViewData["Title"] = "Manage Deal Categories";
}

<h2>Manage Deal Categories</h2>
<hr />
<section class="container">

    <div class="col-lg-12">
        <input class="k-textbox" id="searchCateg" placeholder="Search data..." /> <i>Minimum 3 charachters required to trigger search function</i>
        <hr />
        @(Html.Kendo().Grid<DealCategory>()
                                .Name("gridCateg")
                                .Columns(columns =>
                                {
                            //columns.Bound(p => p.FirstName).ClientTemplate("<a href='" + @Url.Action("About", "Home") + "/#=CustomerId#'>View</a>");
                            columns.Bound(p => p.Id).Filterable(false);
                                    columns.Bound(p => p.Name).Filterable(filter => filter.Extra(false).Operators(o => o.ForString(f => f.Clear().Contains("Contains"))));
                                    columns.Bound(p => p.ShortName).Filterable(filter => filter.Extra(false).Operators(o => o.ForString(f => f.Clear().Contains("Contains"))));
                                    columns.Bound(p => p.SortSeq).Filterable(filter => filter.Extra(false).Operators(o => o.ForString(f => f.Clear().Contains("Contains"))));
                                    columns.Bound(p => p.PublicCategory).Filterable(filter => filter.Extra(false).Operators(o => o.ForString(f => f.Clear().Contains("Contains"))));
                                    columns.Bound(p => p.Status).Filterable(filter => filter.Extra(false).Operators(o => o.ForString(f => f.Clear().Contains("Contains"))));
                                    columns.Command(command =>
                                    {
                                        command.Edit();
                                        command.Destroy();
                                    }).Width(250); //
                        })
                                .ToolBar(tools =>
                                {
                                    tools.Create();
                                    tools.Excel();
                                })
                                .Editable(editable => editable.Mode(GridEditMode.InLine))
                                .Sortable()
                                .Pageable()
                                .Filterable()
                                .DataSource(datasource =>
                                            datasource
                                            .WebApi()
                                            .Model(model =>
                                            {
                                                model.Id(c => c.Id);
                                            })
                                //.Categ(Categ => Categ.Error("error_handler"))
                                .Read(read => read.Action("GetAllCategories", "DealCategory"))
                                .Create(create => create.Action("CreateCategory", "DealCategory"))
                                .Update(update => update.Action("UpdateCategory", "DealCategory", new { id = "{0}" }))
                                .Destroy(destroy => destroy.Action("DeleteCategory", "DealCategory", new { id = "{0}" }))
                                .PageSize(10)
                                )

        )
    </div>
</section>
                                                                              <script>

                                                                                  $(document).ready(function () {

                                                                                      $("#searchCateg").on("keyup change", function (e) {
                                                                                          var grid = $("#gridCateg").data("kendoGrid");
                                                                                          var searchTxt = $("#searchCateg").val();

                                                                                          if (searchTxt.length >= 3) {

                                                                                              grid.dataSource.filter({
                                                                                                  logic: "or", filters: [
                                                                                                      { field: "Name", operator: "contains", value: searchTxt },
                                                                                                      { field: "ShortName", operator: "contains", value: searchTxt },
                                                                                                      { field: "Status", operator: "contains", value: searchTxt }
                                                                                                  ]
                                                                                              });
                                                                                          }
                                                                                          else if (searchTxt.length == 0) {
                                                                                              grid.dataSource.filter([]);
                                                                                          }
                                                                                      });

                                                                                  });

                                                                              </script>
